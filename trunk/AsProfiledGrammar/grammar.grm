"Name"              = 'AsProfiled grammar'
"Author"            = 'Adam Szeliga'
"Version"           = '0.1a'
"About"             = 'Simple grammar for boolean expressions'
"Case Sensitive"    = 'true'
"Start Symbol"      = <Program>

! ------------------------------------------------- Sets

{ID Head}      = {Letter} + [_]
{ID Tail}      = {Alphanumeric} + [_]
{String Chars} = {Printable} + {HT} - ["\]
{Number Without Zero} = {Number} - [0]

! ------------------------------------------------- Terminals

Identifier              = {ID Head}{ID Tail}*(.{ID Head}{ID Tail}*)*
StringLiteral           = '"' ( {String Chars} | '\' {Printable} )* '"'
DecimalNumber           = {Number Without Zero}{Number}* | {Number}
BooleanLiteral          = 'true' | 'false'
ReturnValue             = '@returnValue'
InitialValue            = '^'{ID Head}{ID Tail}*(.{ID Head}{ID Tail}*)*

! ------------------------------------------------- Rules
                          
<Boolean Exp>       ::= <Boolean Exp> <Boolean Operator> <Cmp Exp>  ! #2
                    |   <Cmp Exp>                                   ! #4

<Boolean Operator>  ::= '||'
                    |   '&&'

<Cmp Exp>           ::= <Cmp Exp> <Cmp Operator> <Add Exp>          ! #5
                    |   <Add Exp>                                   ! #11
<Cmp Operator>      ::= '>'
                    |   '<'                              
                    |   '<='
                    |   '>='
                    |   '=='
                    |   '!='                        

<Add Exp>           ::= <Add Exp> <Add Operator> <Mult Exp>         ! #12
                    |   <Mult Exp>                                  ! #14
<Add Operator>      ::= '+'
                    |   '-'

<Mult Exp>          ::= <Mult Exp> <Mult Operator> <Negate Exp>     ! #15
                    |   <Bit Exp>                                   ! #17
<Mult Operator>     ::= '*'
                    |   '/'
<Bit Exp>           ::= <Bit Exp> <Bit Operator> <Negate Exp>       ! #18
                    |  <Negate Exp>                                 ! #20
<Bit Operator>      ::= '&'
                    |   '|'
                            
<Negate Exp>        ::= <Negate Operator> <Value>                   ! #21
                    |  <Value>                                      ! #22
<Negate Operator>   ::= '-'
<Value>             ::= Identifier                                  ! #23
                    |  StringLiteral                                ! #24
                    |  DecimalNumber                                ! #25
                    |  '(' <Boolean Exp> ')'                            ! #26
                    |  BooleanLiteral                               ! #27
                    |  ReturnValue                                  ! #28
                    |  InitialValue
